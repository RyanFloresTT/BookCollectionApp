name: Quality Control

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  frontend:
    name: Frontend Quality Control
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: TypeScript type check
      working-directory: ./frontend
      run: npm run type-check

    - name: Run unit tests with coverage
      working-directory: ./frontend
      run: npm run test:coverage

    - name: Upload frontend coverage
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./frontend/coverage/lcov.info
        flags: frontend
        fail_ci_if_error: true
        verbose: true
        working-directory: ./frontend

    - name: Build project
      working-directory: ./frontend
      run: npm run build

  backend:
    name: Backend Quality Control
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      working-directory: ./backend
      run: go mod download

    - name: Run tests with coverage
      working-directory: ./backend
      run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Upload backend coverage
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./backend/coverage.txt
        flags: backend
        fail_ci_if_error: true
        verbose: true
        working-directory: ./backend