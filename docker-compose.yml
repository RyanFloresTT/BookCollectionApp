services:
  postgres:
    image: postgres:16
    container_name: book_collection_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bookcollectiondb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bookcollectiondb"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: trustytea/bookcollectionapp-backend:latest
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PREMIUM_PRICE_ID=${STRIPE_PREMIUM_PRICE_ID}
      - FRONTEND_URL=${FRONTEND_URL}
      - GOOGLE_BOOKS_API_KEY=${GOOGLE_BOOKS_API_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - BACKEND_URL=${BACKEND_URL}
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_AUTH0_DOMAIN=${AUTH0_DOMAIN}
        - REACT_APP_AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
        - REACT_APP_AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
        - REACT_APP_AUTH0_CALLBACK_URL=${AUTH0_CALLBACK_URL}
        - REACT_APP_API_URL=${API_URL}
        - REACT_APP_STRIPE_PUBLIC_KEY=${STRIPE_PUBLIC_KEY}
        - BACKEND_URL=${BACKEND_URL}
        - NGINX_PORT=${NGINX_PORT}
    image: trustytea/bookcollectionapp-frontend:latest
    ports:
      - "5000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: